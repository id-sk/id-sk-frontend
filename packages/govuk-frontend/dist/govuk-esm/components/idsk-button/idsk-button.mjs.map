{"version":3,"file":"idsk-button.mjs","sources":["../../../../src/govuk/components/idsk-button/idsk-button.mjs"],"sourcesContent":["/* eslint-disable */\n\nvar KEY_SPACE = 32\nvar DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @param {object} $module - HTML element to use for button\n */\nfunction IdskButton ($module) {\n  this.$module = $module\n  this.debounceFormSubmitTimer = null\n}\n\n/**\n * JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\n *\n * Created since some Assistive Technologies (for example some Screenreaders)\n * will tell a user to press space on a 'button', so this functionality needs to be shimmed\n * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n *\n * @param {object} event - event\n */\nIdskButton.prototype.handleKeyDown = function (event) {\n  // get the target element\n  var target = event.target\n  // if the element has a role='button' and the pressed key is a space, we'll simulate a click\n  if (target.getAttribute('role') === 'button' && event.keyCode === KEY_SPACE) {\n    event.preventDefault()\n    // trigger the target's click event\n    target.click()\n  }\n}\n\n/**\n * If the click quickly succeeds a previous click then nothing will happen.\n * This stops people accidentally causing multiple form submissions by\n * double clicking buttons.\n *\n * @param {object} event - event\n * @returns {boolean|undefined} - false if the click should be prevented\n */\nIdskButton.prototype.debounce = function (event) {\n  var target = event.target\n  // Check the button that is clicked on has the preventDoubleClick feature enabled\n  if (target.getAttribute('data-prevent-double-click') !== 'true') {\n    return\n  }\n\n  // If the timer is still running then we want to prevent the click from submitting the form\n  if (this.debounceFormSubmitTimer) {\n    event.preventDefault()\n    return false\n  }\n\n  this.debounceFormSubmitTimer = setTimeout(\n    function () {\n      this.debounceFormSubmitTimer = null\n    }.bind(this),\n    DEBOUNCE_TIMEOUT_IN_SECONDS * 1000\n  )\n}\n\n/**\n * Initialise an event listener for keydown at document level\n * this will help listening for later inserted elements with a role=\"button\"\n */\nIdskButton.prototype.init = function () {\n  this.$module.addEventListener('keydown', this.handleKeyDown)\n  this.$module.addEventListener('click', this.debounce)\n}\n\nexport default IdskButton\n"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,GAAG,GAAE;AAClB,IAAI,2BAA2B,GAAG,EAAC;;;;;;;AAOnC,SAAS,UAAU,EAAE,OAAO,EAAE;EAC5B,IAAI,CAAC,OAAO,GAAG,QAAO;EACtB,IAAI,CAAC,uBAAuB,GAAG,KAAI;CACpC;;;;;;;;;;;AAWD,UAAU,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE;;EAEpD,IAAI,MAAM,GAAG,KAAK,CAAC,OAAM;;EAEzB,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;IAC3E,KAAK,CAAC,cAAc,GAAE;;IAEtB,MAAM,CAAC,KAAK,GAAE;GACf;EACF;;;;;;;;;;AAUD,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;EAC/C,IAAI,MAAM,GAAG,KAAK,CAAC,OAAM;;EAEzB,IAAI,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,KAAK,MAAM,EAAE;IAC/D,MAAM;GACP;;;EAGD,IAAI,IAAI,CAAC,uBAAuB,EAAE;IAChC,KAAK,CAAC,cAAc,GAAE;IACtB,OAAO,KAAK;GACb;;EAED,IAAI,CAAC,uBAAuB,GAAG,UAAU;IACvC,YAAY;MACV,IAAI,CAAC,uBAAuB,GAAG,KAAI;KACpC,CAAC,IAAI,CAAC,IAAI,CAAC;IACZ,2BAA2B,GAAG,IAAI;IACnC;EACF;;;;;;AAMD,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;EACtC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAC;EAC5D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAC;CACtD;;;;"}