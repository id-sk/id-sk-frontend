{"version":3,"file":"character-count.mjs","sources":["../../../../src/govuk/components/character-count/character-count.mjs"],"sourcesContent":["import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { extractConfigByNamespace, mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\nimport '../../vendor/polyfills/Element/prototype/classList.mjs'\n\n/**\n * Character count translation defaults\n *\n * @see {@link CharacterCountConfig.i18n}\n * @constant\n * @default\n * @type {CharacterCountTranslations}\n */\nvar CHARACTER_COUNT_TRANSLATIONS = {\n  // Characters\n  charactersUnderLimit: {\n    one: 'You have %{count} character remaining',\n    other: 'You have %{count} characters remaining'\n  },\n  charactersAtLimit: 'You have 0 characters remaining',\n  charactersOverLimit: {\n    one: 'You have %{count} character too many',\n    other: 'You have %{count} characters too many'\n  },\n  // Words\n  wordsUnderLimit: {\n    one: 'You have %{count} word remaining',\n    other: 'You have %{count} words remaining'\n  },\n  wordsAtLimit: 'You have 0 words remaining',\n  wordsOverLimit: {\n    one: 'You have %{count} word too many',\n    other: 'You have %{count} words too many'\n  },\n  textareaDescription: {\n    other: ''\n  }\n}\n\n/**\n * JavaScript enhancements for the CharacterCount component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @class\n * @param {Element} $module - HTML element to use for character count\n * @param {CharacterCountConfig} [config] - Character count config\n */\nfunction CharacterCount ($module, config) {\n  if (!($module instanceof HTMLElement)) {\n    return this\n  }\n\n  var $textarea = $module.querySelector('.govuk-js-character-count')\n  if (\n    !(\n      $textarea instanceof HTMLTextAreaElement ||\n      $textarea instanceof HTMLInputElement\n    )\n  ) {\n    return this\n  }\n\n  /** @type {CharacterCountConfig} */\n  var defaultConfig = {\n    threshold: 0,\n    i18n: CHARACTER_COUNT_TRANSLATIONS\n  }\n\n  // Read config set using dataset ('data-' values)\n  var datasetConfig = normaliseDataset($module.dataset)\n\n  // To ensure data-attributes take complete precedence, even if they change the\n  // type of count, we need to reset the `maxlength` and `maxwords` from the\n  // JavaScript config.\n  //\n  // We can't mutate `config`, though, as it may be shared across multiple\n  // components inside `initAll`.\n  /** @type {CharacterCountConfig} */\n  var configOverrides = {}\n  if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n    configOverrides = {\n      maxlength: undefined,\n      maxwords: undefined\n    }\n  }\n\n  /**\n   * @deprecated Will be made private in v5.0\n   * @type {CharacterCountConfig}\n   */\n  this.config = mergeConfigs(\n    defaultConfig,\n    config || {},\n    configOverrides,\n    datasetConfig\n  )\n\n  /** @deprecated Will be made private in v5.0 */\n  this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'), {\n    // Read the fallback if necessary rather than have it set in the defaults\n    locale: closestAttributeValue($module, 'lang')\n  })\n\n  /** @deprecated Will be made private in v5.0 */\n  this.maxLength = Infinity\n  // Determine the limit attribute (characters or words)\n  if ('maxwords' in this.config && this.config.maxwords) {\n    this.maxLength = this.config.maxwords\n  } else if ('maxlength' in this.config && this.config.maxlength) {\n    this.maxLength = this.config.maxlength\n  } else {\n    return\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$textarea = $textarea\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$visibleCountMessage = null\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$screenReaderCountMessage = null\n\n  /** @deprecated Will be made private in v5.0 */\n  this.lastInputTimestamp = null\n\n  /** @deprecated Will be made private in v5.0 */\n  this.lastInputValue = ''\n\n  /** @deprecated Will be made private in v5.0 */\n  this.valueChecker = null\n}\n\n/**\n * Initialise component\n */\nCharacterCount.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module || !this.$textarea) {\n    return\n  }\n\n  var $textarea = this.$textarea\n  var $textareaDescription = document.getElementById($textarea.id + '-info')\n  if (!$textareaDescription) {\n    return\n  }\n\n  // Inject a description for the textarea if none is present already\n  // for when the component was rendered with no maxlength, maxwords\n  // nor custom textareaDescriptionText\n  if ($textareaDescription.innerText.match(/^\\s*$/)) {\n    $textareaDescription.innerText = this.i18n.t('textareaDescription', { count: this.maxLength })\n  }\n\n  // Move the textarea description to be immediately after the textarea\n  // Kept for backwards compatibility\n  $textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n  // Create the *screen reader* specific live-updating counter\n  // This doesn't need any styling classes, as it is never visible\n  var $screenReaderCountMessage = document.createElement('div')\n  $screenReaderCountMessage.className = 'govuk-character-count__sr-status govuk-visually-hidden'\n  $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n  this.$screenReaderCountMessage = $screenReaderCountMessage\n  $textareaDescription.insertAdjacentElement('afterend', $screenReaderCountMessage)\n\n  // Create our live-updating counter element, copying the classes from the\n  // textarea description for backwards compatibility as these may have been\n  // configured\n  var $visibleCountMessage = document.createElement('div')\n  $visibleCountMessage.className = $textareaDescription.className\n  $visibleCountMessage.classList.add('govuk-character-count__status')\n  $visibleCountMessage.setAttribute('aria-hidden', 'true')\n  this.$visibleCountMessage = $visibleCountMessage\n  $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n  // Hide the textarea description\n  $textareaDescription.classList.add('govuk-visually-hidden')\n\n  // Remove hard limit if set\n  $textarea.removeAttribute('maxlength')\n\n  this.bindChangeEvents()\n\n  // When the page is restored after navigating 'back' in some browsers the\n  // state of the character count is not restored until *after* the\n  // DOMContentLoaded event is fired, so we need to manually update it after the\n  // pageshow event in browsers that support it.\n  window.addEventListener(\n    'onpageshow' in window ? 'pageshow' : 'DOMContentLoaded',\n    this.updateCountMessage.bind(this)\n  )\n\n  this.updateCountMessage()\n}\n\n/**\n * Bind change events\n *\n * Set up event listeners on the $textarea so that the count messages update\n * when the user types.\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.bindChangeEvents = function () {\n  var $textarea = this.$textarea\n  $textarea.addEventListener('keyup', this.handleKeyUp.bind(this))\n\n  // Bind focus/blur events to start/stop polling\n  $textarea.addEventListener('focus', this.handleFocus.bind(this))\n  $textarea.addEventListener('blur', this.handleBlur.bind(this))\n}\n\n/**\n * Handle key up event\n *\n * Update the visible character counter and keep track of when the last update\n * happened for each keypress\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.handleKeyUp = function () {\n  this.updateVisibleCountMessage()\n  this.lastInputTimestamp = Date.now()\n}\n\n/**\n * Handle focus event\n *\n * Speech recognition software such as Dragon NaturallySpeaking will modify the\n * fields by directly changing its `value`. These changes don't trigger events\n * in JavaScript, so we need to poll to handle when and if they occur.\n *\n * Once the keyup event hasn't been detected for at least 1000 ms (1s), check if\n * the textarea value has changed and update the count message if it has.\n *\n * This is so that the update triggered by the manual comparison doesn't\n * conflict with debounced KeyboardEvent updates.\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.handleFocus = function () {\n  this.valueChecker = setInterval(/** @this {CharacterCount} */ function () {\n    if (!this.lastInputTimestamp || (Date.now() - 500) >= this.lastInputTimestamp) {\n      this.updateIfValueChanged()\n    }\n  }.bind(this), 1000)\n}\n\n/**\n * Handle blur event\n *\n * Stop checking the textarea value once the textarea no longer has focus\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.handleBlur = function () {\n  // Cancel value checking on blur\n  clearInterval(this.valueChecker)\n}\n\n/**\n * Update count message if textarea value has changed\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.updateIfValueChanged = function () {\n  if (this.$textarea.value !== this.lastInputValue) {\n    this.lastInputValue = this.$textarea.value\n    this.updateCountMessage()\n  }\n}\n\n/**\n * Update count message\n *\n * Helper function to update both the visible and screen reader-specific\n * counters simultaneously (e.g. on init)\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.updateCountMessage = function () {\n  this.updateVisibleCountMessage()\n  this.updateScreenReaderCountMessage()\n}\n\n/**\n * Update visible count message\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.updateVisibleCountMessage = function () {\n  var $textarea = this.$textarea\n  var $visibleCountMessage = this.$visibleCountMessage\n  var remainingNumber = this.maxLength - this.count($textarea.value)\n\n  // If input is over the threshold, remove the disabled class which renders the\n  // counter invisible.\n  if (this.isOverThreshold()) {\n    $visibleCountMessage.classList.remove('govuk-character-count__message--disabled')\n  } else {\n    $visibleCountMessage.classList.add('govuk-character-count__message--disabled')\n  }\n\n  // Update styles\n  if (remainingNumber < 0) {\n    $textarea.classList.add('govuk-textarea--error')\n    $visibleCountMessage.classList.remove('govuk-hint')\n    $visibleCountMessage.classList.add('govuk-error-message')\n  } else {\n    $textarea.classList.remove('govuk-textarea--error')\n    $visibleCountMessage.classList.remove('govuk-error-message')\n    $visibleCountMessage.classList.add('govuk-hint')\n  }\n\n  // Update message\n  $visibleCountMessage.innerText = this.getCountMessage()\n}\n\n/**\n * Update screen reader count message\n *\n * @deprecated Will be made private in v5.0\n */\nCharacterCount.prototype.updateScreenReaderCountMessage = function () {\n  var $screenReaderCountMessage = this.$screenReaderCountMessage\n\n  // If over the threshold, remove the aria-hidden attribute, allowing screen\n  // readers to announce the content of the element.\n  if (this.isOverThreshold()) {\n    $screenReaderCountMessage.removeAttribute('aria-hidden')\n  } else {\n    $screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n  }\n\n  // Update message\n  $screenReaderCountMessage.innerText = this.getCountMessage()\n}\n\n/**\n * Count the number of characters (or words, if `config.maxwords` is set)\n * in the given text\n *\n * @deprecated Will be made private in v5.0\n * @param {string} text - The text to count the characters of\n * @returns {number} the number of characters (or words) in the text\n */\nCharacterCount.prototype.count = function (text) {\n  if ('maxwords' in this.config && this.config.maxwords) {\n    var tokens = text.match(/\\S+/g) || [] // Matches consecutive non-whitespace chars\n    return tokens.length\n  } else {\n    return text.length\n  }\n}\n\n/**\n * Get count message\n *\n * @deprecated Will be made private in v5.0\n * @returns {string} Status message\n */\nCharacterCount.prototype.getCountMessage = function () {\n  var remainingNumber = this.maxLength - this.count(this.$textarea.value)\n\n  var countType = 'maxwords' in this.config && this.config.maxwords ? 'words' : 'characters'\n  return this.formatCountMessage(remainingNumber, countType)\n}\n\n/**\n * Formats the message shown to users according to what's counted\n * and how many remain\n *\n * @deprecated Will be made private in v5.0\n * @param {number} remainingNumber - The number of words/characaters remaining\n * @param {string} countType - \"words\" or \"characters\"\n * @returns {string} Status message\n */\nCharacterCount.prototype.formatCountMessage = function (remainingNumber, countType) {\n  if (remainingNumber === 0) {\n    return this.i18n.t(countType + 'AtLimit')\n  }\n\n  var translationKeySuffix = remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n  return this.i18n.t(countType + translationKeySuffix, { count: Math.abs(remainingNumber) })\n}\n\n/**\n * Check if count is over threshold\n *\n * Checks whether the value is over the configured threshold for the input.\n * If there is no configured threshold, it is set to 0 and this function will\n * always return true.\n *\n * @deprecated Will be made private in v5.0\n * @returns {boolean} true if the current count is over the config.threshold\n *   (or no threshold is set)\n */\nCharacterCount.prototype.isOverThreshold = function () {\n  // No threshold means we're always above threshold so save some computation\n  if (!this.config.threshold) {\n    return true\n  }\n\n  var $textarea = this.$textarea\n\n  // Determine the remaining number of characters/words\n  var currentLength = this.count($textarea.value)\n  var maxLength = this.maxLength\n\n  var thresholdValue = maxLength * this.config.threshold / 100\n\n  return (thresholdValue <= currentLength)\n}\n\nexport default CharacterCount\n\n/**\n * Character count config\n *\n * @typedef {CharacterCountConfigWithMaxLength | CharacterCountConfigWithMaxWords} CharacterCountConfig\n */\n\n/**\n * Character count config (with maximum number of characters)\n *\n * @typedef {object} CharacterCountConfigWithMaxLength\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CHARACTER_COUNT_TRANSLATIONS] - Character count translations\n */\n\n/**\n * Character count config (with maximum number of words)\n *\n * @typedef {object} CharacterCountConfigWithMaxWords\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CHARACTER_COUNT_TRANSLATIONS] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CHARACTER_COUNT_TRANSLATIONS}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n"],"names":[],"mappings":"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"}