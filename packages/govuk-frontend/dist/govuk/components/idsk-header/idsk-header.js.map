{"version":3,"file":"idsk-header.js","sources":["../../../../src/govuk/common/index.mjs","../../../../src/govuk/common.mjs","../../../../src/govuk/components/idsk-header/idsk-header.mjs"],"sourcesContent":["/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n *\n * @module common/index\n */\n\n/**\n * Used to generate a unique string, allows multiple instances of the component\n * without them conflicting with each other.\n * https://stackoverflow.com/a/8809472\n *\n * @deprecated Will be made private in v5.0\n * @returns {string} Unique ID\n */\nexport function generateUniqueID () {\n  var d = new Date().getTime()\n  if (typeof window.performance !== 'undefined' && typeof window.performance.now === 'function') {\n    d += window.performance.now() // use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0\n    d = Math.floor(d / 16)\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n}\n\n/**\n * Config flattening function\n *\n * Takes any number of objects, flattens them into namespaced key-value pairs,\n * (e.g. \\{'i18n.showSection': 'Show section'\\}) and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @deprecated Will be made private in v5.0\n * @returns {{ [key: string]: unknown }} A flattened object of key-value pairs.\n */\nexport function mergeConfigs (/* configObject1, configObject2, ...configObjects */) {\n  /**\n   * Function to take nested objects and flatten them to a dot-separated keyed\n   * object. Doing this means we don't need to do any deep/recursive merging of\n   * each of our objects, nor transform our dataset from a flat list into a\n   * nested object.\n   *\n   * @param {{ [key: string]: unknown }} configObject - Deeply nested object\n   * @returns {{ [key: string]: unknown }} Flattened object with dot-separated keys\n   */\n  var flattenObject = function (configObject) {\n    // Prepare an empty return object\n    /** @type {{ [key: string]: unknown }} */\n    var flattenedObject = {}\n\n    /**\n     * Our flattening function, this is called recursively for each level of\n     * depth in the object. At each level we prepend the previous level names to\n     * the key using `prefix`.\n     *\n     * @param {Partial<{ [key: string]: unknown }>} obj - Object to flatten\n     * @param {string} [prefix] - Optional dot-separated prefix\n     */\n    var flattenLoop = function (obj, prefix) {\n      // Loop through keys...\n      for (var key in obj) {\n        // Check to see if this is a prototypical key/value,\n        // if it is, skip it.\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n          continue\n        }\n        var value = obj[key]\n        var prefixedKey = prefix ? prefix + '.' + key : key\n        if (typeof value === 'object') {\n          // If the value is a nested object, recurse over that too\n          flattenLoop(value, prefixedKey)\n        } else {\n          // Otherwise, add this value to our return object\n          flattenedObject[prefixedKey] = value\n        }\n      }\n    }\n\n    // Kick off the recursive loop\n    flattenLoop(configObject)\n    return flattenedObject\n  }\n\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  var formattedConfigObject = {}\n\n  // Loop through each of the remaining passed objects and push their keys\n  // one-by-one into configObject. Any duplicate keys will override the existing\n  // key with the new value.\n  for (var i = 0; i < arguments.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- Ignore mismatch between arguments types\n    var obj = flattenObject(arguments[i])\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        formattedConfigObject[key] = obj[key]\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from a flattened config\n * object, removing the namespace in the process.\n *\n * @deprecated Will be made private in v5.0\n * @param {{ [key: string]: unknown }} configObject - The object to extract key-value pairs from.\n * @param {string} namespace - The namespace to filter keys with.\n * @returns {{ [key: string]: unknown }} Flattened object with dot-separated key namespace removed\n * @throws {Error} Config object required\n * @throws {Error} Namespace string required\n */\nexport function extractConfigByNamespace (configObject, namespace) {\n  // Check we have what we need\n  if (!configObject || typeof configObject !== 'object') {\n    throw new Error('Provide a `configObject` of type \"object\".')\n  }\n\n  if (!namespace || typeof namespace !== 'string') {\n    throw new Error('Provide a `namespace` of type \"string\" to filter the `configObject` by.')\n  }\n\n  /** @type {{ [key: string]: unknown }} */\n  var newObject = {}\n\n  for (var key in configObject) {\n    // Split the key into parts, using . as our namespace separator\n    var keyParts = key.split('.')\n    // Check if the first namespace matches the configured namespace\n    if (Object.prototype.hasOwnProperty.call(configObject, key) && keyParts[0] === namespace) {\n      // Remove the first item (the namespace) from the parts array,\n      // but only if there is more than one part (we don't want blank keys!)\n      if (keyParts.length > 1) {\n        keyParts.shift()\n      }\n      // Join the remaining parts back together\n      var newKey = keyParts.join('.')\n      // Add them to our new object\n      newObject[newKey] = configObject[key]\n    }\n  }\n  return newObject\n}\n\n/**\n * Toggle class\n *\n * @param {object} node - element\n * @param {string} className - to toggle\n */\nexport function toggleClass (node, className) {\n  if (node === null) {\n    return\n  }\n\n  if (node.className.indexOf(className) > 0) {\n    node.className = node.className.replace(' ' + className, '')\n  } else {\n    node.className += ' ' + className\n  }\n}\n","// Implementation of common function is gathered in the `common` folder\n// as some are split in their own modules to limit impacts of the polyfills\n// they require.\n// This module exports the non polyfilled methods as they used to be\n// to avoid breaking changes\nexport * from './common/index.mjs'\n","/* eslint-disable */\n\nimport { toggleClass } from '../../common.mjs'\n\n/**\n * Header component\n *\n * @class\n * @param {Element} $module - HTML element to use for header\n */\nfunction IdskHeader($module) {\n  this.$module = $module\n}\n\n/**\n * Initialise header\n */\nIdskHeader.prototype.init = function () {\n  // Check for module\n  var $module = this.$module\n  if (!$module) {\n    return\n  }\n\n  // Check for button\n  var $toggleButton = $module.querySelector('.govuk-js-header-toggle')\n  if (!$toggleButton) {\n    return\n  }\n\n  // Handle $toggleButton click events\n  $toggleButton.addEventListener('click', this.handleClick.bind(this))\n}\n\n/**\n * Toggle class\n *\n * @param {object} node - element\n * @param {string} className - className to toggle\n */\nIdskHeader.prototype.toggleClass = function (node, className) {\n  if (node.className.indexOf(className) > 0) {\n    node.className = node.className.replace(' ' + className, '')\n  } else {\n    node.className += ' ' + className\n  }\n}\n\n/**\n * An event handler for click event on $toggleButton\n *\n * @param {object} event - event\n */\nIdskHeader.prototype.handleClick = function (event) {\n  var $module = this.$module\n  var $toggleButton = event.target || event.srcElement\n  var $target = $module.querySelector('#' + $toggleButton.getAttribute('aria-controls'))\n\n  // If a button with aria-controls, handle click\n  if ($toggleButton && $target) {\n    toggleClass($target, 'idsk-header__navigation--open')\n    toggleClass($toggleButton, 'idsk-header__menu-button--open')\n\n    $toggleButton.setAttribute('aria-expanded', $toggleButton.getAttribute('aria-expanded') !== 'true')\n    $target.setAttribute('aria-hidden', ($target.getAttribute('aria-hidden') === 'false').toString())\n  }\n}\n\nexport default IdskHeader\n"],"names":[],"mappings":";;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AA6IA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE;EAC9C,EAAE,IAAI,IAAI,KAAK,IAAI,EAAE;EACrB,IAAI,MAAM;EACV,GAAG;;EAEH,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;EAC7C,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE,EAAC;EAChE,GAAG,MAAM;EACT,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,GAAG,UAAS;EACrC,GAAG;EACH,CAAC;;ECvKD,uEAAuE;;ECAvE;AACA,AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,UAAU,CAAC,OAAO,EAAE;EAC7B,EAAE,IAAI,CAAC,OAAO,GAAG,QAAO;EACxB,CAAC;;EAED;EACA;EACA;EACA,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;EACxC;EACA,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAO;EAC5B,EAAE,IAAI,CAAC,OAAO,EAAE;EAChB,IAAI,MAAM;EACV,GAAG;;EAEH;EACA,EAAE,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,yBAAyB,EAAC;EACtE,EAAE,IAAI,CAAC,aAAa,EAAE;EACtB,IAAI,MAAM;EACV,GAAG;;EAEH;EACA,EAAE,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;EACtE,EAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE,SAAS,EAAE;EAC9D,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;EAC7C,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE,EAAC;EAChE,GAAG,MAAM;EACT,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,GAAG,UAAS;EACrC,GAAG;EACH,EAAC;;EAED;EACA;EACA;EACA;EACA;EACA,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK,EAAE;EACpD,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAO;EAC5B,EAAE,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,WAAU;EACtD,EAAE,IAAI,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,EAAC;;EAExF;EACA,EAAE,IAAI,aAAa,IAAI,OAAO,EAAE;EAChC,IAAI,WAAW,CAAC,OAAO,EAAE,+BAA+B,EAAC;EACzD,IAAI,WAAW,CAAC,aAAa,EAAE,gCAAgC,EAAC;;EAEhE,IAAI,aAAa,CAAC,YAAY,CAAC,eAAe,EAAE,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM,EAAC;EACvG,IAAI,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,OAAO,EAAE,QAAQ,EAAE,EAAC;EACrG,GAAG;EACH,CAAC;;;;;;;;"}